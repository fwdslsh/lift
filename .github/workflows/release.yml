name: Release and Publish

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: Build Bun single executable
        run: |
          bun build src/cli.js --compile --outfile lift-${{ matrix.os }}
      - name: Upload binary to release
        uses: softprops/action-gh-release@v1
        with:
          files: lift-${{ matrix.os }}


  publish-npm:
    needs: build-binaries
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js for npm publish
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org/'
      - name: Install Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: Build (if needed)
        run: bun run build || echo "No build step"
      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


  publish-docker-image:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      run: |
        VERSION="${{ github.ref_name }}"
        VERSION="${VERSION#refs/tags/v}"
        docker build . -t fwdslsh/lift:latest -t fwdslsh/lift:$VERSION
        docker push fwdslsh/lift:latest
        docker push fwdslsh/lift:$VERSION
